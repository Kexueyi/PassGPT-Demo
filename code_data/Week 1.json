[
  {
    "type": "Import",
    "start": {
      "line": 13,
      "column": 0
    },
    "end": {
      "line": 13,
      "column": 9
    },
    "name": "re",
    "alias": null
  },
  {
    "type": "Assignment",
    "body": "string='Harper is a good girl.'",
    "start": {
      "line": 21,
      "column": 0
    },
    "end": {
      "line": 21,
      "column": 31
    }
  },
  {
    "type": "Function call",
    "name": "re.sub",
    "arguments": "('..g.*d','the goodest',string)",
    "start": {
      "line": 25,
      "column": 0
    },
    "end": {
      "line": 25,
      "column": 37
    }
  },
  {
    "type": "Assignment",
    "body": "string='''\nOne ring to rule them all,\nOne ring to find them, One ring to bring them all,\nand in the darkness, bind them.\n'''",
    "start": {
      "line": 33,
      "column": 0
    },
    "end": {
      "line": 33,
      "column": 124
    }
  },
  {
    "type": "Assignment",
    "body": "string=re.sub('(<.*?>)',' ',string)",
    "start": {
      "line": 39,
      "column": 0
    },
    "end": {
      "line": 39,
      "column": 37
    }
  },
  {
    "type": "Assignment",
    "body": "string=re.sub('[,\\.!?:()\"]','',string)",
    "start": {
      "line": 40,
      "column": 0
    },
    "end": {
      "line": 40,
      "column": 40
    }
  },
  {
    "type": "Assignment",
    "body": "string=re.sub('[^a-zA-Z\"]',' ',string)",
    "start": {
      "line": 41,
      "column": 0
    },
    "end": {
      "line": 41,
      "column": 38
    }
  },
  {
    "type": "Function call",
    "name": "print",
    "arguments": "(string)",
    "start": {
      "line": 43,
      "column": 0
    },
    "end": {
      "line": 43,
      "column": 13
    }
  },
  {
    "type": "Import",
    "from": "nltk.tokenize",
    "import": {
      "name": "word_tokenize",
      "alias": null
    },
    "start": {
      "line": 53,
      "column": 0
    },
    "end": {
      "line": 53,
      "column": 39
    }
  },
  {
    "type": "Assignment",
    "body": "words=word_tokenize(string)",
    "start": {
      "line": 55,
      "column": 0
    },
    "end": {
      "line": 55,
      "column": 27
    }
  },
  {
    "type": "Function call",
    "name": "print",
    "arguments": "(words)",
    "start": {
      "line": 56,
      "column": 0
    },
    "end": {
      "line": 56,
      "column": 12
    }
  },
  {
    "type": "Import",
    "start": {
      "line": 64,
      "column": 0
    },
    "end": {
      "line": 64,
      "column": 11
    },
    "name": "nltk",
    "alias": null
  },
  {
    "type": "Function call",
    "name": "nltk.download",
    "arguments": "('punkt')",
    "start": {
      "line": 65,
      "column": 0
    },
    "end": {
      "line": 65,
      "column": 22
    }
  },
  {
    "type": "Import",
    "from": "nltk.stem",
    "import": {
      "name": "PorterStemmer",
      "alias": null
    },
    "start": {
      "line": 66,
      "column": 0
    },
    "end": {
      "line": 66,
      "column": 35
    }
  },
  {
    "type": "Import",
    "from": "nltk.tokenize",
    "import": {
      "name": "word_tokenize",
      "alias": null
    },
    "start": {
      "line": 67,
      "column": 0
    },
    "end": {
      "line": 67,
      "column": 39
    }
  },
  {
    "type": "Import",
    "from": "functools",
    "import": {
      "name": "reduce",
      "alias": null
    },
    "start": {
      "line": 68,
      "column": 0
    },
    "end": {
      "line": 68,
      "column": 28
    }
  },
  {
    "type": "Assignment",
    "body": "ps=PorterStemmer()",
    "start": {
      "line": 74,
      "column": 0
    },
    "end": {
      "line": 74,
      "column": 18
    }
  },
  {
    "type": "Assignment",
    "body": "string='''\nFrom the tip of his wand burst the silver doe. She landed on the office floor, bounded once across the office, and soared out of the window. Dumbledore watched her fly away, and as her silvery glow faded he turned back to Snape, and his eyes were full of tears.\n\u201cAfter all this time?\u201d\n\u201cAlways,\u201d said Snape.\n'''",
    "start": {
      "line": 76,
      "column": 0
    },
    "end": {
      "line": 76,
      "column": 321
    }
  },
  {
    "type": "Assignment",
    "body": "words=word_tokenize(string)",
    "start": {
      "line": 82,
      "column": 0
    },
    "end": {
      "line": 82,
      "column": 27
    }
  },
  {
    "type": "Assignment",
    "body": "stemmed_string=reduce(lambdax,y:x+\" \"+ps.stem(y),words,\"\")",
    "start": {
      "line": 83,
      "column": 0
    },
    "end": {
      "line": 83,
      "column": 66
    }
  },
  {
    "type": "Function call",
    "name": "print",
    "arguments": "(stemmed_string)",
    "start": {
      "line": 84,
      "column": 0
    },
    "end": {
      "line": 84,
      "column": 21
    }
  },
  {
    "type": "Import",
    "start": {
      "line": 94,
      "column": 0
    },
    "end": {
      "line": 94,
      "column": 11
    },
    "name": "nltk",
    "alias": null
  },
  {
    "type": "Function call",
    "name": "nltk.download",
    "arguments": "('wordnet')",
    "start": {
      "line": 95,
      "column": 0
    },
    "end": {
      "line": 95,
      "column": 24
    }
  },
  {
    "type": "Import",
    "from": "nltk.stem",
    "import": {
      "name": "WordNetLemmatizer",
      "alias": null
    },
    "start": {
      "line": 96,
      "column": 0
    },
    "end": {
      "line": 96,
      "column": 39
    }
  },
  {
    "type": "Import",
    "from": "nltk.tokenize",
    "import": {
      "name": "word_tokenize",
      "alias": null
    },
    "start": {
      "line": 97,
      "column": 0
    },
    "end": {
      "line": 97,
      "column": 39
    }
  },
  {
    "type": "Function call",
    "name": "nltk.download",
    "arguments": "('averaged_perceptron_tagger')",
    "start": {
      "line": 98,
      "column": 0
    },
    "end": {
      "line": 98,
      "column": 43
    }
  },
  {
    "type": "Assignment",
    "body": "lemmatizer=WordNetLemmatizer()",
    "start": {
      "line": 99,
      "column": 0
    },
    "end": {
      "line": 99,
      "column": 31
    }
  },
  {
    "type": "Import",
    "from": "nltk.corpus",
    "import": {
      "name": "wordnet",
      "alias": null
    },
    "start": {
      "line": 100,
      "column": 0
    },
    "end": {
      "line": 100,
      "column": 31
    }
  },
  {
    "type": "Function declaration",
    "body": "defpos_tagger(nltk_tag):     ifnltk_tag.startswith('J'):         returnwordnet.ADJ  elifnltk_tag.startswith('V'):         returnwordnet.VERB  elifnltk_tag.startswith('N'):         returnwordnet.NOUN  elifnltk_tag.startswith('R'):         returnwordnet.ADV  else:         returnNone\n\n\n",
    "start": {
      "line": 106,
      "column": 0
    },
    "end": {
      "line": 122,
      "column": 1
    }
  },
  {
    "type": "Assignment",
    "body": "string='''\nFrom the tip of his wand burst the silver doe. \nShe landed on the office floor, bounded once across the office, and soared out of the window. \nDumbledore watched her fly away, and as her silvery glow faded he turned back to Snape, and his eyes were full of tears.\n\u201cAfter all this time?\u201d\n\u201cAlways,\u201d said Snape.\u201d\n'''",
    "start": {
      "line": 122,
      "column": 0
    },
    "end": {
      "line": 122,
      "column": 326
    }
  },
  {
    "type": "Assignment",
    "body": "pos_tagged=nltk.pos_tag(nltk.word_tokenize(string))",
    "start": {
      "line": 129,
      "column": 0
    },
    "end": {
      "line": 129,
      "column": 53
    }
  },
  {
    "type": "Assignment",
    "body": "wordnet_tagged=list(map(lambdax:(x[0],pos_tagger(x[1])),pos_tagged))",
    "start": {
      "line": 131,
      "column": 0
    },
    "end": {
      "line": 131,
      "column": 74
    }
  },
  {
    "type": "Function call",
    "name": "print",
    "arguments": "(wordnet_tagged)",
    "start": {
      "line": 132,
      "column": 0
    },
    "end": {
      "line": 132,
      "column": 21
    }
  },
  {
    "type": "Assignment",
    "body": "lemmatized_sentence=[]",
    "start": {
      "line": 138,
      "column": 0
    },
    "end": {
      "line": 138,
      "column": 24
    }
  },
  {
    "type": "For Loop Statement",
    "body": "forword,taginwordnet_tagged:     iftagisNone:         lemmatized_sentence.append(word)  else:         lemmatized_sentence.append(lemmatizer.lemmatize(word,tag))\n\n\n",
    "start": {
      "line": 140,
      "column": 0
    },
    "end": {
      "line": 145,
      "column": 1
    }
  },
  {
    "type": "Assignment",
    "body": "lemmatized_sentence=\" \".join(lemmatized_sentence)",
    "start": {
      "line": 145,
      "column": 0
    },
    "end": {
      "line": 145,
      "column": 51
    }
  },
  {
    "type": "Function call",
    "name": "print",
    "arguments": "(lemmatized_sentence)",
    "start": {
      "line": 147,
      "column": 0
    },
    "end": {
      "line": 147,
      "column": 26
    }
  },
  {
    "type": "Import",
    "start": {
      "line": 155,
      "column": 0
    },
    "end": {
      "line": 155,
      "column": 11
    },
    "name": "nltk",
    "alias": null
  },
  {
    "type": "Import",
    "start": {
      "line": 156,
      "column": 0
    },
    "end": {
      "line": 156,
      "column": 9
    },
    "name": "re",
    "alias": null
  },
  {
    "type": "Import",
    "start": {
      "line": 157,
      "column": 0
    },
    "end": {
      "line": 157,
      "column": 18
    },
    "name": "numpy",
    "alias": "np"
  },
  {
    "type": "Import",
    "from": "nltk.corpus",
    "import": {
      "name": "stopwords",
      "alias": null
    },
    "start": {
      "line": 158,
      "column": 0
    },
    "end": {
      "line": 158,
      "column": 33
    }
  },
  {
    "type": "Assignment",
    "body": "stop_words=set(stopwords.words('english'))",
    "start": {
      "line": 159,
      "column": 0
    },
    "end": {
      "line": 159,
      "column": 44
    }
  },
  {
    "type": "Assignment",
    "body": "text='''\nNever gonna run around and desert you.\n'''",
    "start": {
      "line": 161,
      "column": 0
    },
    "end": {
      "line": 161,
      "column": 53
    }
  },
  {
    "type": "Assignment",
    "body": "dataset=nltk.word_tokenize(text)",
    "start": {
      "line": 165,
      "column": 0
    },
    "end": {
      "line": 165,
      "column": 33
    }
  },
  {
    "type": "For Loop Statement",
    "body": "foriinrange(len(dataset)):     dataset[i]=dataset[i].lower() dataset[i]=re.sub(r'\\W',' ',dataset[i]) dataset[i]=re.sub(r'\\s+',' ',dataset[i])\n\n",
    "start": {
      "line": 166,
      "column": 0
    },
    "end": {
      "line": 170,
      "column": 1
    }
  },
  {
    "type": "Assignment",
    "body": "filtered_sentence=[wforwindatasetifnotw.lower()instop_words]",
    "start": {
      "line": 170,
      "column": 0
    },
    "end": {
      "line": 170,
      "column": 71
    }
  },
  {
    "type": "Function call",
    "name": "print",
    "arguments": "(filtered_sentence)",
    "start": {
      "line": 171,
      "column": 0
    },
    "end": {
      "line": 171,
      "column": 24
    }
  }
]